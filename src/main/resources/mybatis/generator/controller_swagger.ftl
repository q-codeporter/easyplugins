package ${topPackage}.controller;

import ${javaModelTargetPackage}.${EntityName};
import ${javaMapperTargetPackage}.extend.${EntityName}MapperExtend;
import org.zhiqiang.lu.easycode.spring.aop.model.LogicException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.web.bind.annotation.*;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

<#list packages as package>
    import ${package};
</#list>

/**
* @author generated by Q's plugin
*/


@RestController
@RequestMapping("/${entity_name}")
@Api(value = "${entityName}", tags = "${remarks}")
public class ${EntityName}Controller {

@Autowired
private ${EntityName}MapperExtend ${entityName}Mapper;

@PostMapping("/insert")
@ApiOperation(value = "添加${remarks}信息", notes = "添加${remarks}信息，如果主键重复会返回错误提示。")
public ${EntityName} insert(@ApiParam(value = "${remarks}", required = true) @RequestBody ${EntityName} ${entityName}) throws LogicException {
try{
${entityName}Mapper.insert(${entityName});
return ${entityName};
} catch (DuplicateKeyException e) {
throw new LogicException("<#list primary_key as pk>[${pk.remarks}]<#if pk_has_next>,</#if></#list>信息重复！");
}
}

@PostMapping("/update")
@ApiOperation(value = "更新${remarks}信息", notes = "通过主键更新${remarks}信息、返回更新条数[1]，当返回[0]时是因为没有找到要更新的信息。")
public int update(@ApiParam(value = "${remarks}", required = true) @RequestBody ${EntityName} ${entityName}) {
return ${entityName}Mapper.updateByPrimaryKeySelective(${entityName});
}

@GetMapping("/delete")
@ApiOperation(value = "删除${remarks}信息", notes = "通过主键删除${remarks}信息、返回删除条数[1]，当返回[0]时是因为没有找到要删除的信息。")
public int delete(<#list primary_key as pk>@ApiParam(value = "[${pk.length}]${pk.remarks}", required = true) @RequestParam ${pk.fullyQualifiedJavaType.shortName} ${pk.actualColumnName}<#if pk_has_next>,</#if></#list>) {
return ${entityName}Mapper.deleteByPrimaryKey(<#list primary_key as pk>${pk.actualColumnName}<#if pk_has_next>,</#if></#list>);
}

@GetMapping("/select")
@ApiOperation(value = "查询${remarks}信息", notes = "通过主键查询${remarks}信息")
public ${EntityName} select(<#list primary_key as pk>@ApiParam(value = "[${pk.length}]${pk.remarks}", required = true) @RequestParam ${pk.fullyQualifiedJavaType.shortName} ${pk.actualColumnName}<#if pk_has_next>,</#if></#list>) {
return ${entityName}Mapper.selectByPrimaryKey(<#list primary_key as pk>${pk.actualColumnName}<#if pk_has_next>,</#if></#list>);
}
}